@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>UK Government General Elections</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>

        //sets up what is visible on the web application on site load
        function main() {
            var newContents = document.getElementById("logRegBody1");
            newContents.style.display = "none";
            newContents = document.getElementById("loginOrRegister");
            newContents.style.display = "none";
            newContents = document.getElementById("citizenCandidateOrParty");
            newContents.style.display = "none";
        }

        var loggingInOrRegistering = 2;
        //Main function for modifying contents of web application based on user interaction
        function changeInfo(clicked_id) {
            //var element = document.getElementById("rightTab");
            //element.innerHTML = "Text changed";

            var oldContents = document.getElementById("homeBody");
            oldContents.style.display = "none";
            oldContents = document.getElementById("logRegBody1");
            oldContents.style.display = "none";
            /*oldContents = document.getElementById("loginOrRegister");
            oldContents.style.display = "none";*/
            //document.getElementById("unconditionalBodyText").innerHTML = "How un-pogchamp of you, Javascript";

            if (clicked_id == "leftTab") {
                var newContents = document.getElementById("homeBody");
                newContents.style.display = "block";

                //body - unconditional
                document.getElementById("unconditionalBodyText").innerHTML = "Welcome to the UK General Election site. You can register an account which will give you access to voting for your local MP in the next general election. This site also allows you to sign up as a candidate in an election. Below you may view, and search by filtering, all incumbent MPs in relation to their constituency seats.";
            }
            else if (clicked_id == "centreTab") {
                //body - unconditional
                document.getElementById("unconditionalBodyText").innerHTML = "Below is a complete list all of the candidates running for your constituency. It also includes any political party affiliations. If there is currently a general election on, you may vote immediately.";
            }
            else if (clicked_id == "rightTab") {
                //body - unconditional
                document.getElementById("unconditionalBodyText").innerHTML = "Election-related information and decisions";
            }
            else if (clicked_id == "login") {
                loggingInOrRegistering = 0;

                //body - unconditional
                document.getElementById("unconditionalBodyText").innerHTML = "Here you may login with a pre-existing account. This account may be a regular citizen account, or a collective political party account.";

                //body - loginOrReg
                var newContents = document.getElementById("logRegBody1");
                newContents.style.display = "block";
                newContents = document.getElementById("loginDisplay");
                newContents.style.display = "block";
                newContents = document.getElementById("registerDisplay");
                newContents.style.display = "none";

                //other stuff v
                //newContents = document.getElementById("citizenCandidateOrParty");
                //newContents.style.display = "block";
            }
            else if (clicked_id == "register") {
                loggingInOrRegistering = 1;

                //body - unconditional
                document.getElementById("unconditionalBodyText").innerHTML = "Here you may register an account. This account may be a regular citizen account, or a collective political party account.";

                //body - loginOrReg
                var newContents = document.getElementById("logRegBody1");
                newContents.style.display = "block";
                newContents = document.getElementById("registerDisplay");
                newContents.style.display = "block";
                newContents = document.getElementById("loginDisplay");
                newContents.style.display = "none";

                //other stuff v
                //newContents = document.getElementById("citizenCandidateOrParty");
                //newContents.style.display = "block";
            }

            //Testing stuff
        }

        //Type something here
        function loginOrReg(clicked_id) {

            if (clicked_id == "login") {
                document.getElementById(upperBodyTextLogReg).innerHTML = "Login as a citizen, a candidate, or a political party"
                document.getElementById("login").innerHTML = "Go back";
                document.getElementById("").innerHTML = "Citizen";
                //document.getElementById("").innerHTML = "Candidate";
                //document.getElementById("").innerHTML = "Political Party";
            }
            else if (clicked_id == "register") {
                document.getElementById(upperBodyTextLogReg).innerHTML = "Register as a citizen, a candidate, or a political party"
                document.getElementById("login").innerHTML = "Go back";
                document.getElementById("").innerHTML = "Citizen";
                //document.getElementById("").innerHTML = "Candidate";
                //document.getElementById("").innerHTML = "Political Party";
            }

            if (stage1 == true) {

            }
        }

        //Takes user input and filters a table for associated information
        function searchConstituency() {
            var input = document.getElementById("userInput");
            var filter = input.value.toLowerCase();
            var table = document.getElementById("MPConstituencyTable")
            tr = table.getElementsByTagName("tr");

            var td;
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[0];
                if (td) {
                    var textValue = td.textContent || td.innerText;
                    if (textValue.toLowerCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    }
                    else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }

        var accountTypeChoice = "";
        //Takes user input for logging in account type options
        function citizenCandidateorParty(clicked_id) {
            if (loggingInOrRegistering == 0) {
                if (clicked_id == "citizenLogOrReg") {
                    accountTypeChoice = "citizen";
                    document.getElementById("upperBodyTextLog").innerHTML = "Logging in as: Citizen";
                }
                else if (clicked_id == "partyLogOrReg") {
                    accountTypeChoice = "party";
                    document.getElementById("upperBodyTextLog").innerHTML = "Logging in as: Political Party";
                }
                else if (clicked_id == "adminLogOrReg") {
                    accountTypeChoice = "admin";
                    document.getElementById("upperBodyTextLog").innerHTML = "Logging in as: Administrator";
                }
            }
            else if (loggingInOrRegistering == 1) {
                if (clicked_id == "citizenLogOrReg") {
                    accountTypeChoice = "citizen";
                    document.getElementById("upperBodyTextLog").innerHTML = "Registering as: Citizen";
                }
                else if (clicked_id == "partyLogOrReg") {
                    accountTypeChoice = "party";
                    document.getElementById("upperBodyTextLog").innerHTML = "Registering as: Political Party";
                }
                else if (clicked_id == "adminLogOrReg") {
                    accountTypeChoice = "admin";
                    document.getElementById("upperBodyTextLog").innerHTML = "Registering as: Administrator";
                }
            }
        }

        var citizenAccounts = new Object();
        var IDCounter = 0;

        //Directly acquires the user's inputted details
        function saveDetails() {
            document.getElementById("defunctCredentialsReg").innerHTML = "DEBUG: saveDetails() ran";
            password = document.getElementById("passwordReg").value;
            passwordConfirm = document.getElementById("confirmPasswordReg").value;

            //checks if password inputs matched & if a national insurance number was inputted; creates account if both are true
            if (password != "") {
                document.getElementById("defunctCredentialsReg").innerHTML = "DEBUG: password was not null";
                if (password == passwordConfirm) {
                    document.getElementById("defunctCredentialsReg").innerHTML = "DEBUG: passwords match";
                    if (accountTypeChoice == "citizen") {
                        document.getElementById("defunctCredentialsReg").innerHTML = "DEBUG: was citizen account";
                        //if ((document.getElementById("nationalInsuranceReg").value != null) && (NIN = document.getElementById("nationalInsuranceReg").value == String)) {
                        //var NIN = document.getElementById("nationalInsuranceReg").value;

                        document.getElementById("defunctCredentialsReg").innerHTML = "DEBUG: could not instantiate single class";
                        let onlyAccount = new SpecialAccount(); //test one
                        document.getElementById("defunctCredentialsReg").innerHTML = "DEBUG: could not run single class";
                        onlyAccount.doSomething();
                        document.getElementById("defunctCredentialsReg").innerHTML = "DEBUG: could run single class";
                        /*citizenAccounts[IDCounter] = new citizenAccount(); correct one
                        document.getElementById("defunctCredentialsReg").innerHTML = "DEBUG: could not run class";
                        citizenAccounts[IDCounter].doSomething();
                        document.getElementById("defunctCredentialsReg").innerHTML = "DEBUG: could run class";
                        IDCounter++;*/

                        //let NIN = new citizenAccount();
                        //NIN.collectDetails();
                        //NIN.doSomething();
                        //}
                    }
                    else if (accountTypeChoice == "party") {

                    }
                    else if (accountTypeChoice == "admin") {

                    }
                }
            }
            //password inputs did not match
            else {
                document.getElementById("passwordReg").innerHTML = "";
                document.getElementById("confirmPasswordReg").innerHTML = "";
                document.getElementById("defunctCredentialsReg").innerHTML = "Password and password confirmation do not match.";
            }
        }

        //example vv
        class Car {
            constructor(brand) {
                this.carname = brand;
            }
            present() {
                return 'I have a ' + this.carname;
            }
        }

        class Model extends Car {
            constructor(brand, mod) {
                super(brand);
                this.model = mod;
            }
            show() {
                return this.present() + ', it is a ' + this.model;
            }
        }
        //example ^^

        class ClassName {
            constructor() {}
            method_1() {
                var peanus;
            }
            method_2() {}
            method_3() {}
        }

        class Account {
            constructor() {
                this.password = "";
                this.passwordConfirm = "";
            }
        }

        //for testing
        class SpecialAccount extends Account {
            constructor() {
                super.password = "";
                super.passwordConfirm = "";
                this.uniqueVariable = "";
            }
        }

        class CitizenAccount extends Account {
            constructor() {
                super.password = "";
                super.passwordConfirm = "";

                this.firstName = "";
                this.email = "";
                this.NIN = "";
                this.nationalities = "";
                this.resAddress = "";
                this.birthday = "";
            }

            collectDetails() {
                //functionality debug
                //var firstName = document.getElementById("firstNameReg").value; //gets input value
                //document.getElementById("emailReg").value = firstName; //sets input value

                this.firstName = document.getElementById("firstNameReg").value;
                this.email = document.getElementById("emailReg").value;
                super.password = document.getElementById("passwordReg").value;
                super.passwordConfirm = document.getElementById("confirmPasswordReg").value;
                this.NIN = document.getElementById("nationalInsuranceReg").value;
                this.nationalities = document.getElementById("nationalityReg").value;
                this.resAddress = document.getElementById("addressReg").value;
                this.birthday = document.getElementById("birthdayReg").value;

                allDetailsFilled();
            }

            doSomething() {
                document.getElementById("defunctCredentialsReg").innerHTML = "Pingas";
            }

            allDetailsFilled() {
                //assign values then:
                if (this.firstName != null && this.email != null && this.NIN != null && this.nationalities != null && this.resAddress != null && this.birthday != null && super.password != null && super.passwordConfirm != null) {
                    //success
                }
                else {
                    document.getElementById("defunctCredentialsReg").innerHTML = "Missing required information.";
                    //this == null;
                    //document.getElementById("defunctCredentialsReg").innerHTML = "DID NOT DELETE CLASS INSTANTIATION";
                }
            }
        }

        class PartyAccount extends Account {
            constructor() {
                var partyName = String("");
                var email = String("");
                var headquartersAddress = String("");
                //add some more eventually

                function allDetailsFilled() {
                    if (partyName != null && email != null && headquartersAddress != null) {
                        comparePasswordInputs();
                    }
                }
            }
        }

        class AdminAccount extends Account {
            constructor(firstName, email, NIN, nationalities, resAddress, birthday) {
                var firstName = String("");
                var email = String("");
                var NIN = String("");
                var nationalities = String("");
                var resAddress = String("");
                var birthday = String("");
                //add some more eventually

                function allDetailsFilled() {
                    if (firstName != null && email != null && NIN != null && nationalities != null && resAddress != null && birthday != null && password != null && passwordConfirm != null) {
                        comparePasswordInputs();
                    }
                }
            }
        }

        /*$(window).resize(function () {

        }).resize();*/

    </script>
</head>
<style>
    body {
        color: #f0f0f0;
        background-color: #101010;
    }
    .btn {
        color: #f0f0f0;
        background-color: #202020;
    }
    .btn:hover {
        color: #f0f0f0;
        background-color: #204080;
    }
    /*table, td, th {
        border: 1px solid #f0f0f0;
    }
    table {
        border-collapse: collapse;
        width: 100%;
        overflow: scroll;
    }
    th, td {
        height: 48px;
        padding: 16px;
        color: #f0f0f0;
    }
    th {
        text-align: center;
        background-color: #3060c0;
    }
    td {
        text-align: left;
    }*/
    tr:nth-child(even) {background-color: #183048;}
    tr:nth-child(odd) {background-color: #284058;}

    /*thead, tbody {display: block; }*/

    .tableFormatting {
        overflow-y: auto;
        overflow-x: hidden;
        height: 256px;
    }

    .tableFormatting thead th {
        position: sticky;
        top: 0;
    }

    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px 16px;
    }

    th {
        background: #38685c;
    }

    /*tbody {
        height: 256px;
        width: 100%;
        overflow-y: scroll;
        overflow-x: hidden;
    }*/

    /*tbody td, thead th {
        width: 20%;
    }*/

    p {
        display: block;
        margin: 2em;
    }

    h3 {
        display: block;
        margin-top: 1em;
        margin-bottom: 0.5em;
    }

    input {
        width: 100%;
        font-size: 16px;
        padding: 12px 20px 12px 20px;
        border: 1px solid #f0f0f0;
        margin-bottom: 0.5em;
    }

    #loginRadio, #registerRadio {
        display: block;
    }

    #submitRegDetails {
        padding: 3px 4px;
        font-size: 20px;
        border-radius: 3px;
    }

    /*#logRegBody1 {
        visibility: hidden;
    }
    #loginOrRegister {
        visibility: hidden;
    }
    #citizenCandidateOrParty {
        visibility: hidden;
    }*/

</style>
<body onload="main()">

    <header>
        <nav class="navbar navbar-expand-sm bg-dark">
            <div class="container-fluid">
                <div class="navbar-header">
                    <a class="navbar-brand" id="leftTab" onclick="changeInfo(this.id)">UK Gov General Elections</a>
                </div>
                <ul class="nav navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" id="centreTab" onclick="changeInfo(this.id)">Vote Now</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="rightTab" onclick="changeInfo(this.id)">My Page</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" data-toggle="dropdown">Sign In</a>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" id="login" onclick="changeInfo(this.id)">Login</a>
                            <a class="dropdown-item" id="register" onclick="changeInfo(this.id)">Register</a>
                        </div>
                    </li>
                </ul>
            </div>
        </nav>
    </header>

    <div class="container-fluid">

        <!--Login/Register-->
        <div class="row">
            <div class="col-sm-10">
            </div>
            <div class="col-sm-2">
                <!--<button type="button" class="btn-block btn"><h5 id="loginOrRegBtn" onclick="changeInfo(this.id)" class="text-center">Login/Register</h5></button>-->
            </div>
        </div>

        <!--Title of Page-->
        <div class="row">
            <div class="col-sm-12">
                <h1 class="text-center">UK Government</h1>
                <h1 class="text-center">General Elections</h1>
            </div>
        </div>

        <!--Tabs-->
        <div class="row">
            <div class="col-sm-3">
                <!--<button type="button" class="btn-block btn"><h2 id="leftTab" onclick="changeInfo(this.id)" class="text-center">Home</h2></button>-->
            </div>
            <div class="col-sm-6">
                <!--<h2 id="VN" class="text-center">Vote Now</h2>-->
                <!--<button type="button" class="btn-block btn"><h2 id="centreTab" onclick="changeInfo(this.id)" class="text-center">Vote Now</h2></button>-->
            </div>
            <div class="col-sm-3">
                <!--<button type="button" class="btn-block btn"><h2 id="rightTab" onclick="changeInfo(this.id)" class="text-center">My Page</h2></button>-->
            </div>
        </div>

        <!--Body Section - Unconditional-->
        <div class="row">
            <div class="col-sm-12">
                <p id="unconditionalBodyText" class="text-center">Welcome to the UK General Election site. You can register an account which will give you access to voting for your local MP in the next general election. This site also allows you to sign up as a candidate in an election. Below you may view, and search by filtering, all incumbent MPs in relation to their constituency seats.</p>
            </div>
        </div>

        <!--Body Section - Home-->
        <div class="row" id="homeBody">
            <div class="col-sm-12">
                <h3 id="lowerBodyText" class="text-left">Last election results and incumbent government</h3>

                <input type="text" id="userInput" onkeyup="searchConstituency()" placeholder="Search MPs based on Constituency..." />

                <div class="tableFormatting">
                    <table id="MPConstituencyTable">
                        <thead>
                            <tr>
                                <th>Constituency Seat</th>
                                <th>Country</th>
                                <th>Full Name</th>
                                <th>Political Affiliation</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>Aldershot</td>
                                <td>England</td>
                                <td>Leo Docherty</td>
                                <td>Conservative and Unionist Party</td>
                            </tr>
                            <tr>
                                <td>Aldridge-Brownhills</td>
                                <td>England</td>
                                <td>Wendy Morton</td>
                                <td>Conservative and Unionist Party</td>
                            </tr>
                            <tr>
                                <td>Altrincham and Sale West</td>
                                <td>England</td>
                                <td>Sir Graham Brady</td>
                                <td>Conservative and Unionist Party</td>
                            </tr>
                            <tr>
                                <td>Amber Valley</td>
                                <td>England</td>
                                <td>Nigel Mills</td>
                                <td>Conservative and Unionist Party</td>
                            </tr>
                            <tr>
                                <td>Arundel and South Downs</td>
                                <td>England</td>
                                <td>Andrew Griffith</td>
                                <td>Conservative and Unionist Party</td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <!--Head of Government Info-->
                <h4 class="text-left">Prime Minister (Head of Government)</h4>

                <!--Secretary of State Info-->
                <h4 class="text-left">Secretaries of State</h4>

                <!--Lower House Info-->
                <h4 class="text-left">Members of the House of Commons (Lower House of Parliament)</h4>
            </div>
        </div>

        <!--Body Section - Login/Register-->
        <div class="row" id="logRegBody1">
            <h3 id="upperBodyTextLog" class="text-left">Logging in as: Citizen</h3>
            <div class="row">
                <div class="col-sm-2">
                    <button type="button" id="citizenLogOrReg" class="btn-sm" onclick="citizenCandidateorParty(this.id)"><h2 class="text-center">Citizen</h2></button>
                </div>
                <div class="col-sm-2">
                    <button type="button" id="partyLogOrReg" class="btn-sm" onclick="citizenCandidateorParty(this.id)"><h2 class="text-center">Party</h2></button>
                </div>
                <div class="col-sm-2">
                    <button type="button" id="adminLogOrReg" class="btn-sm" onclick="citizenCandidateorParty(this.id)"><h2 class="text-center">Admin</h2></button>
                </div>
            </div>
            <!--<h3 id="upperBodyTextLogReg" class="text-left">Logging in as: Citizen</h3>-->
            <form>
                <div id="loginDisplay">
                    <!--<h3 id="upperBodyTextLog" class="text-left">Logging in as: Citizen</h3>
            <div class="row">
                <div class="col-sm-2">
                    <button type="button" id="citizenLog" class="btn-sm" onclick="citizenCandidateorParty(this.id)"><h2 class="text-center">Citizen</h2></button>
                </div>
                <div class="col-sm-2">
                    <button type="button" id="partyLog" class="btn-sm" onclick="citizenCandidateorParty(this.id)"><h2 class="text-center">Party</h2></button>
                </div>
                <div class="col-sm-2">
                    <button type="button" id="adminLog" class="btn-sm" onclick="citizenCandidateorParty(this.id)"><h2 class="text-center">Admin</h2></button>
                </div>
            </div>-->
                    <label>Email Address:</label>
                    <input type="email" class="form-control" id="emailLog" />
                    <label>Password:</label>
                    <input type="password" class="form-control" id="passwordLog" />
                    <label>Confirm Password:</label>
                    <input type="password" class="form-control" id="confirmPasswordLog" />
                    <button type="button" class="btn-sm"><h2 id="submitRegDetails" class="text-center">Submit</h2></button>
                </div>
                <div id="registerDisplay">
                    <!--<h3 id="upperBodyTextReg" class="text-left">Registering as: Citizen</h3>
                    <div class="row">
                        <div class="col-sm-2">
                            <button type="button" id="citizenReg" class="btn-sm" onclick="citizenCandidateorParty(this.id)"><h2 class="text-center">Citizen</h2></button>
                        </div>
                        <div class="col-sm-2">
                            <button type="button" id="partyReg" class="btn-sm" onclick="citizenCandidateorParty(this.id)"><h2 class="text-center">Party</h2></button>
                        </div>
                        <div class="col-sm-2">
                            <button type="button" id="adminReg" class="btn-sm" onclick="citizenCandidateorParty(this.id)"><h2 class="text-center">Admin</h2></button>
                        </div>
                    </div>-->
                    <div class="row">
                        <div class="col-sm-6">
                            <label>First Name:</label>
                            <input class="form-control" id="firstNameReg" />
                            <label>Email Address:</label>
                            <input type="email" class="form-control" id="emailReg" />
                            <label>Password:</label>
                            <input type="password" class="form-control" id="passwordReg" />
                        </div>
                        <div class="col-sm-6">
                            <label>Confirm Password:</label>
                            <input type="password" class="form-control" id="confirmPasswordReg" />
                            <label>National Insurance Number:</label>
                            <input class="form-control" id="nationalInsuranceNumberReg" />
                            <label>Nationalities (WIP):</label>
                            <input class="form-control" id="nationalityReg" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <label>Residential Address:</label>
                            <input class="form-control" id="addressReg" />
                            <label>Birthday:</label>
                            <input type="date" class="form-control" id="birthdayReg" />
                            <p id="defunctCredentialsReg">Placeholder text</p>
                            <button type="button" class="btn-sm"><h2 id="submitRegDetails" class="text-center" onclick="saveDetails(this.id)">Submit</h2></button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        </div>
</body>
</html>

    <!--
    <div class="text-center">
        <h1 class="display-4">Welcome</h1>
        <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    </div>
        //-->
